.\" Generated by scdoc 1.11.1
.\" Complete documentation for this program is not available as a GNU info page
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.nh
.ad l
.\" Begin generated content:
.TH "foot.ini" "5" "2021-07-24"
.P
.SH NAME
foot.\&ini - configuration file for \fBfoot\fR(1)
.P
.SH DESCRIPTION
.P
\fBfoot\fR uses the standard \fIunix configuration format\fR, with section based
key/value pairs.\& The default section is unnamed (i.\&e.\& not prefixed
with a \fI[section]\fR).\&
.P
foot will search for a configuration file in the following locations,
in this order:
.P
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.IP \(bu 4
.\}
\fBXDG_CONFIG_HOME/foot/foot.\&ini\fR
.RE
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.IP \(bu 4
.\}
\fB~/.\&config/foot/foot.\&ini\fR
.RE
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.IP \(bu 4
.\}
\fBXDG_CONFIG_DIRS/foot/foot.\&ini\fR

.RE
.P
.SH SECTION: default
.P
\fBshell\fR
.RS 4
Executable to launch.\& Typically a shell.\& Default: \fI$SHELL\fR if set,
otherwise the user's default shell (as specified in
\fI/etc/passwd\fR).\& You can also pass arguments.\& For example
\fB/bin/bash --norc\fR.\&
.P
.RE
\fBlogin-shell\fR
.RS 4
Boolean.\& If enabled, the shell will be launched as a login shell,
by prepending a '-' to argv[0].\& Default: \fIno\fR.\&
.P
.RE
\fBterm\fR
.RS 4
Value to set the environment variable \fBTERM\fR to.\& Default: \fIfoot\fR
or \fIxterm-256color\fR if built with \fI-Dterminfo=disabled\fR
.P
.RE
\fBfont\fR, \fBfont-bold\fR, \fBfont-italic\fR, \fBfont-bold-italic\fR
.RS 4
Comma separated list of fonts to use, in fontconfig format.\& That
is, a font name followed by a list of colon-separated
options.\& Most noteworthy is \fB:size=n\fR, which is used to set the
font size.\&
.P
Examples:
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.IP \(bu 4
.\}
Dina:weight=bold:slant=italic
.RE
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.IP \(bu 4
.\}
Courier New:size=12
.RE
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.IP \(bu 4
.\}
Fantasque Sans Mono:fontfeatures=ss01

.RE
.P
For each option, the first font is the primary font.\& The remaining
fonts are fallback fonts that will be used whenever a glyph cannot
be found in the primary font.\&
.P
The fallback fonts are searched in the order they appear.\& If a
glyph cannot be found in any of the fallback fonts, the dynamic
fallback list from fontconfig (for the primary font) is
searched.\&
.P
\fBfont-bold\fR, \fBfont-italic\fR and \fBfont-bold-italic\fR allow custom
fonts to be used for bold/italic/bold+italic fonts.\& If left
unconfigured, the bold/italic variants of the regular font(s)
specified in \fBfont\fR are used.\& \fBNote\fR: you \fImay\fR have to tweak the
size(s) of the custom bold/italic fonts to match the regular font.\&
.P
To disable bold and/or italic fonts, set e.\&g.\& \fBfont-bold\fR to
\fIexactly\fR the same value as \fBfont\fR.\&
.P
Default: \fImonospace:size=8\fR (\fBfont\fR), \fInot set\fR (\fBfont-bold\fR,
\fBfont-italic\fR, \fBfont-bold-italic\fR).\&
.P
.RE
\fBinclude\fR
.RS 4
Absolute path to configuration file to import.\&
.P
The import file has its own section scope.\& I.\&e.\& the including
configuration is still in the default section after the include,
regardless of which section the included file ends in.\&
.P
The path must be an absolute path.\&
.P
Multiple include directives are allowed, but only one path per
directive.\&
.P
Nested imports are allowed.\&
.P
Default: \fInot set\fR.\&
.P
.RE
\fBline-height\fR
.RS 4
An absolute value, in \fIpoints\fR, that override line height from the
font metrics.\&
.P
You can specify a height in \fIpixels\fR by using the \fBpx\fR suffix:
e.\&g.\& \fBline-height=12px\fR.\&
.P
See also: \fBvertical-letter-offset\fR.\&
.P
Default: \fInot set\fR.\&
.P
.RE
\fBletter-spacing\fR
.RS 4
Spacing between letters, in \fIpoints\fR.\& A positive value will
increase the cell size, and a negative value shrinks it.\&
.P
You can specify a letter spacing in \fIpixels\fR by using the \fBpx\fR
suffix: e.\&g.\& \fBletter-spacing=2px\fR.\&
.P
See also: \fBhorizontal-letter-offset\fR.\&
.P
Default: \fI0\fR.\&
.P
.RE
\fBhorizontal-letter-offset\fR, \fBvertical-letter-offset\fR
.RS 4
Configure the horizontal and vertical offsets used when
positioning glyphs within cells, in \fIpoints\fR, relative to the top
left corner.\&
.P
To specify an offset in \fIpixels\fR, append \fBpx\fR:
e.\&g.\& \fBhorizontal-letter-offset=2px\fR.\&
.P
Default: \fI0\fR.\&
.P
.RE
\fBunderline-offset\fR
.RS 4
Use a custom offset for underlines.\& The offset is, by default, in
\fIpoints\fR and relative the font's baseline.\& A positive value
positions the underline under the baseline, while a negative value
positions it above the baseline.\&
.P
To specify an offset in \fIpixels\fR, append \fBpx\fR:
\fBunderline-offset=2px\fR.\&
.P
If left unset (the default), the offset specified in the font is
used, or estimated by foot if the font lacks underline positioning
information.\&
.P
Default: \fIunset\fR.\&
.P
.RE
\fBbox-drawings-uses-font-glyphs\fR Boolean.\& When disabled, foot generates
.RS 4
box/line drawing characters itself.\& The are several advantages to
doing this instead of using font glyphs:
.P
.RS 4
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.IP \(bu 4
.\}
No antialiasing effects where e.\&g.\& line endpoints appear
dimmed down, or blurred.\&
.RE
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.IP \(bu 4
.\}
Line- and box characters are guaranteed to span the entire cell,
resulting in a gap-less appearance.\&
.RE
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.IP \(bu 4
.\}
No alignment issues, i.\&e.\& lines are centered when they should be.\&
.RE
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.IP \(bu 4
.\}
Many fonts lack some, or all, of the line- and box drawing
characters, causing fallback fonts to be used, which results
in out-of-place looking glyphs (for example, badly sized).\&

.RE
.P
.RE
When enabled, box/line drawing characters are rendered using font
glyphs.\& This may result in a more uniform look, in some use cases.\&
.P
Default: \fIno\fR.\&
.P
.RE
\fBdpi-aware\fR
.RS 4
\fBauto\fR, \fByes\fR, or \fBno\fR.\& When set to \fByes\fR, fonts are sized using
the monitor's DPI, making a font of a given size have the same
physical size, regardless of monitor.\& In other words, if you drag
a foot window between different monitors, the font size remains
the same.\&
.P
In this mode, the monitor's scaling factor is ignored; doubling
the scaling factor will \fBnot\fR double the font size.\&
.P
When set to \fBno\fR, the monitor's DPI is ignored.\& The font is
instead sized using the monitor's scaling factor; doubling the
scaling factor \fBdoes\fR double the font size.\&
.P
Finally, if set to \fBauto\fR, fonts will be sized using the monitor's
DPI on monitors with a scaling factor of 1, but otherwise using
the scaling factor.\&
.P
Default: \fIauto\fR
.P
.RE
\fBpad\fR
.RS 4
Padding between border and glyphs, in pixels (subject to output
scaling), on the form \fIXxY\fR.\&
.P
This will add \fIat least\fR X pixels on both the left and right
sides, and Y pixels on the top and bottom sides.\& The grid content
will be anchored in the top left corner.\& I.\&e.\& if the window
manager forces an odd window size on foot, the additional pixels
will be added to the right and bottom sides.\&
.P
To instead center the grid content, append \fBcenter\fR (e.\&g.\& \fBpad=5x5
center\fR).\&
.P
Default: \fI2x2\fR.\&
.P
.RE
\fBresize-delay-ms\fR
.RS 4
Time, in milliseconds, of "idle time" "before foot sends the new
window dimensions to the client application while doing an
interactive resize of a foot window.\& Idle time in this context is
a period of time where the window size is not changing.\&
.P
In other words, while you are fiddling with the window size, foot
does not send the updated dimensions to the client.\& Only when you
pause the fiddling for \fBresize-delay-ms\fR milliseconds is the
client updated.\&
.P
Emphasis is on \fIwhile\fR here; as soon as the interactive resize
ends (i.\&e.\& when you let go of the window border), the final
dimensions is sent to the client, without any delays.\&
.P
Setting it to 0 disables the delay completely.\&
.P
Default: \fI100\fR.\&
.P
.RE
\fBinitial-window-size-pixels\fR
.RS 4
Initial window width and height in \fIpixels\fR (subject to output
scaling), on the form \fIWIDTHxHEIGHT\fR.\& The height \fIincludes\fR the
titlebar when using CSDs.\& Mutually exclusive to
\fBinitial-window-size-chars\fR.\& Default: \fI700x500\fR.\&
.P
.RE
\fBinitial-window-size-chars\fR
.RS 4
Initial window width and height in \fIcharacters\fR, on the form
\fIWIDTHxHEIGHT\fR.\& Mutually exclusive to
\fBinitial-window-size-pixels\fR.\&'
.P
Note that if you have a multi-monitor setup, with different
scaling factors, there is a possibility the window size will not
be set correctly.\& If that is the case, use
\fBinitial-window-size-pixels\fR instead.\&
.P
Default: \fInot set\fR.\&
.P
.RE
\fBinitial-window-mode\fR
.RS 4
Initial window mode for each newly spawned window: \fBwindowed\fR,
\fBmaximized\fR or \fBfullscreen\fR.\& Default: \fIwindowed\fR.\&
.P
.RE
\fBtitle\fR
.RS 4
Initial window title.\& Default: \fIfoot\fR.\&
.P
.RE
\fBlocked-title\fR
.RS 4
Boolean.\& If enabled, applications are not allowed to change the
title at run-time.\& Default: \fIno\fR.\&
.P
.RE
\fBapp-id\fR
.RS 4
Value to set the \fBapp-id\fR property on the Wayland window to.\& The
compositor can use this value to e.\&g.\& group multiple windows, or
apply window management rules.\& Default: \fIfoot\fR.\&
.P
.RE
\fBbold-text-in-bright\fR
.RS 4
Semi-boolean.\& When enabled, bold text is rendered in a brighter
color (in addition to using a bold font).\& The color is brightened
by increasing its luminance.\&
.P
If set to \fBpalette-based\fR, rather than a simple \fByes|true\fR, colors
matching one of the 8 regular palette colors will be brightened
using the corresponding bright palette color.\& Other colors will be
brightened by increasing the luminance.\&
.P
Default: \fIno\fR.\&
.P
.RE
\fBword-delimiters\fR
.RS 4
String of characters that act as word delimiters when selecting
text.\& Note that whitespace characters are \fIalways\fR word
delimiters, regardless of this setting.\& Default: \fI,│`|:"'()[]{}<>\fR
.P
.RE
\fBnotify\fR
.RS 4
Command to execute to display a notification.\& \fI${title}\fR and
\fI${body}\fR will be replaced with the notification's actual \fItitle\fR
and \fIbody\fR (message content).\&
.P
\fI${app-id}\fR is replaced with the value of the command line option
\fI--app-id\fR, and defaults to \fBfoot\fR.\&
.P
\fI${window-title}\fR is replaced with the current window title.\&
.P
Applications can trigger notifications in the following ways:
.P
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.IP \(bu 4
.\}
OSC 777: \fB\\e]777;notify;<title>;<body>\\e\\\\\fR

.RE
.P
Notifications are \fBinhibited\fR if the foot window has keyboard
focus.\&
.P
Default: \fInotify-send -a ${app-id} -i ${app-id} ${title} ${body}\fR.\&
.P
.RE
\fBselection-target\fR
.RS 4
Clipboard target to automatically copy selected text to.\& One of
\fBnone\fR, \fBprimary\fR, \fBclipboard\fR or \fBboth\fR.\& Default: \fIprimary\fR.\&
.P
.RE
\fBworkers\fR
.RS 4
Number of threads to use for rendering.\& Set to 0 to disable
multithreading.\& Default: the number of available logical CPUs
(including SMT).\& Note that this is not always the best value.\& In
some cases, the number of physical \fIcores\fR is better.\&
.P
.P
.RE
.SH SECTION: bell
.P
\fBurgent\fR
.RS 4
When set to \fIyes\fR, the margins will be painted in red
whenever \fBBEL\fR is received while the window does \fBnot\fR have
keyboard focus.\& Note that Wayland currently does not have an
\fIurgency\fR hint like X11.\& The name \fBurgent\fR was chosen for
forward-compatibility in the hopes that a corresponding Wayland
protocol is added in the future (in which case foot will use that
instead of painting its margins red).\&
.P
Applications can enable/disable this feature programmatically with
the \fBCSI ?\& 1042 h\fR and \fBCSI ?\& 1042 l\fR escape sequences.\&
.P
\fINote\fR: expect this feature to be \fBreplaced\fR with proper
compositor urgency support once/if that gets implemented.\&
Default: \fIno\fR
.P
.RE
\fBnotify\fR
.RS 4
When set to \fIyes\fR, foot will emit a desktop notification using
the command specified in the \fBnotify\fR option whenever \fBBEL\fR is
received and the window does \fBnot\fR have keyboard focus.\& Default:
\fIno\fR
.P
.RE
\fBcommand\fR
.RS 4
When set, foot will execute this command when \fBBEL\fR is received.\&
Default: none
.P
.RE
\fBcommand-focused\fR
.RS 4
Whether to run the command on \fBBEL\fR even while focused.\& Default:
\fIno\fR
.P
.P
.RE
.SH SECTION: scrollback
.P
\fBlines\fR
.RS 4
Number of scrollback lines.\& The maximum number of allocated lines
will be this value plus the number of visible lines, rounded up to
the nearest power of 2.\& Default: \fI1000\fR.\&
.P
.RE
\fBmultiplier\fR
.RS 4
Amount to multiply mouse scrolling with.\& It is a decimal number,
i.\&e.\& fractions are allowed.\& Default: \fI3.\&0\fR.\&
.P
.RE
\fBindicator-position\fR
.RS 4
Configures the style of the scrollback position indicator.\& One of
\fBnone\fR, \fBfixed\fR or \fBrelative\fR.\& \fBnone\fR disables the indicator
completely.\& \fBfixed\fR always renders the indicator near the top of
the window, and \fBrelative\fR renders the indicator at the position
corresponding to the current scrollback position.\& Default:
\fIrelative\fR.\&
.P
.RE
\fBindicator-format\fR
.RS 4
Which format to use when displaying the scrollback position
indicator.\& Either \fIpercentage\fR, \fIline\fR, or a custom fixed
string.\& This option is ignored if
\fBindicator-position=none\fR.\& Default: \fIempty string\fR.\&
.P
.P
.RE
.SH SECTION: url
.P
\fBlaunch\fR
.RS 4
Command to execute when opening URLs.\& \fI${url}\fR will be replaced
with the actual URL.\& Default: \fIxdg-open ${url}\fR.\&
.P
.RE
\fBosc8-underline\fR
.RS 4
When to underline OSC-8 URLs.\& Possible values are \fBurl-mode\fR and
\fBalways\fR.\&
.P
When set to \fBurl-mode\fR, OSC-8 URLs are only highlighted in URL
mode, just like auto-detected URLs.\&
.P
When set to \fBalways\fR, OSC-8 URLs are always highlighted,
regardless of their other attributes (bold, italic etc).\& Note that
this does \fInot\fR make them clickable.\&
.P
Default: \fIurl-mode\fR
.P
.RE
\fBlabel-letters\fR
.RS 4
String of characters to use when generating key sequences for URL
jump labels.\& Default: \fIsadfjklewcmpgh\fR.\&
.P
.RE
\fBprotocols\fR
.RS 4
Comma separated list of protocols (schemes) that should be
recognized in URL mode.\& Note that only auto-detected URLs are
affected by this option.\& OSC-8 URLs are always enabled, regardless
of protocol.\& Default: \fIhttp, https, ftp, ftps, file, gemini,
gopher\fR.\&
.P
.P
.RE
.SH SECTION: cursor
.P
This section controls the cursor style and color.\& Note that
applications can change these at runtime.\&
.P
\fBstyle\fR
.RS 4
Configures the default cursor style, and is one of: \fBblock\fR,
\fBbeam\fR or \fBunderline\fR.\& Note that this can be overridden by
applications.\& Default: \fIblock\fR.\&
.P
.RE
\fBblink\fR
.RS 4
Boolean.\& Enables blinking cursor.\& Note that this can be overridden
by applications.\& Default: \fIno\fR.\&
.P
.RE
\fBcolor\fR
.RS 4
Two RRGGBB values specifying the foreground (text) and background
(cursor) colors for the cursor.\& Default: inversed foreground and
background colors.\& Note that this value only applies to the block
cursor.\& The other cursor styles are always rendered with the
foreground color.\&
.P
.RE
\fBbeam-thickness\fR
.RS 4
Thickness (width) of the beam styled cursor.\& The value is in
points, and its exact value thus depends on the monitor's DPI.\& To
instead specify a thickness in pixels, use the \fBpx\fR suffix:
e.\&g.\& \fBbeam-thickness=2px\fR.\& Default: \fI1.\&5\fR
.P
.RE
\fBunderline-thickness\fR
.RS 4
Thickness (height) of the underline styled cursor.\& The value is in
points, and its exact value thus depends on the monitor's DPI.\&
.P
To instead specify a thickness in pixels, use the \fBpx\fR suffix:
e.\&g.\& \fBunderline-thickness=2px\fR.\&
.P
Note that if left unset, the cursor's thickness will scale with
the font size, while if set, the size is fixed.\&
.P
Default: \fIfont underline thickness\fR.\&
.P
.P
.RE
.SH SECTION: mouse
.P
\fBhide-when-typing\fR
.RS 4
Boolean.\& When enabled, the mouse cursor is hidden while
typing.\& Default: \fIno\fR.\&
.P
.RE
\fBalternate-scroll-mode\fR
.RS 4
Boolean.\& This option controls the initial value for the \fIalternate
scroll mode\fR.\& When this mode is enabled, mouse scroll events are
translated to \fIup\fR/\fIdown\fR key events when displaying the alternate
screen.\&
.P
This lets you scroll with the mouse in e.\&g.\& pagers (like \fIless\fR)
without enabling native mouse support in them.\&
.P
Alternate scrolling is \fBnot\fR used if the application enables
native mouse support.\&
.P
This option can be modified by applications at run-time using the
escape sequences \fBCSI ?\& 1007 h\fR (enable) and \fBCSI ?\& 1007 l\fR
(disable).\&
.P
Default: \fIyes\fR.\&
.P
.P
.RE
.SH SECTION: colors
.P
This section controls the 16 ANSI colors, the default foreground
and background colors, and the extended 256 color palette.\& Note that 
applications can change these at runtime.\&
.P
The colors are in RRGGBB format.\& That is, they do \fBnot\fR have an alpha
component.\& You can configure the background transparency with the
\fIalpha\fR option.\&
.P
\fBforeground\fR
.RS 4
Default RRGGBB foreground color.\& This is the color used when no
ANSI color is being used.\& Default: \fIdcdccc\fR.\&
.P
.RE
\fBbackground\fR
.RS 4
Default RRGGBB background color.\& This is the color used when no
ANSI color is being used.\& Default: \fI111111\fR.\&
.P
.RE
\fBregular0\fR, \fBregular1\fR \fB.\&.\&\fR \fBregular7\fR
.RS 4
The eight basic ANSI colors.\& Default: \fI222222\fR, \fIcc9393\fR,
\fI7f9f7f\fR, \fId0bf8f\fR, \fI6ca0a3\fR, \fIdc8cc3\fR, \fI93e0e3\fR and \fIdcdccc\fR (a
variant of the \fIzenburn\fR theme).\&
.P
.RE
\fBbright0\fR, \fBbright1\fR \fB.\&.\&\fR \fBbright7\fR
.RS 4
The eight bright ANSI colors.\& Default: \fI666666\fR, \fIdca3a3\fR,
\fIbfebbf\fR, \fIf0dfaf\fR, \fI8cd0d3\fR, \fIfcace3\fR, \fIb3ffff\fR and \fIffffff\fR (a
variant of the \fIzenburn\fR theme).\&
.P
.RE
\fB0\fR \fB.\&.\&\fR \fB255\fR
.RS 4
Arbitrary colors in the 256-color palette.\& Default: for \fB0\fR \fB.\&.\&\fR
\fB15\fR, see regular and bright defaults above; see
https://en.\&wikipedia.\&org/wiki/ANSI_escape_code#8-bit for an
explanation of the remainder.\&
.P
.RE
\fBalpha\fR
.RS 4
Background translucency.\& A value in the range 0.\&0-1.\&0, where 0.\&0
means completely transparent, and 1.\&0 is opaque.\& Default: \fI1.\&0\fR.\&
.P
.RE
\fBselection-foreground\fR, \fBselection-background\fR
.RS 4
Foreground (text) and background color to use in selected
text.\& Note that \fBboth\fR options must be set, or the default will be
used.\& Default: \fIinverse foreground/background\fR.\&
.P
.RE
\fBjump-labels\fR
.RS 4
To RRGGBB values specifying the foreground (text) and background
colors to use when rendering jump labels in URL mode.\& Default:
\fIregular0 regular3\fR.\&
.P
.RE
\fBurls\fR
.RS 4
Color to use for the underline used to highlight URLs in URL
mode.\& Default: \fIregular3\fR.\&
.P
.P
.RE
.SH SECTION: csd
.P
This section controls the look of the \fICSDs\fR (Client Side
Decorations).\& Note that the default is to \fBnot\fR use CSDs, but instead
to use \fISSDs\fR (Server Side Decorations) when the compositor supports
it.\&
.P
Note that unlike the colors defined in the \fIcolors\fR section, the color
values here are in AARRGGBB format.\& I.\&e.\& they contain an alpha
component.\&
.P
\fBpreferred\fR
.RS 4
Which type of window decorations to prefer: \fBclient\fR (CSD),
\fBserver\fR (SSD) or \fBnone\fR.\&
.P
Note that this is only a hint to the compositor.\& Depending on
compositor support, and how it has been configured, it may
instruct foot to use CSDs even though this option has been set to
\fBserver\fR, or render SSDs despite \fBclient\fR or \fBnone\fR being set.\&
.P
Default: \fIserver\fR.\&
.P
.RE
\fBsize\fR
.RS 4
Height, in pixels (subject to output scaling), of the
titlebar.\& Default: \fI26\fR.\&
.P
.RE
\fBcolor\fR
.RS 4
Titlebar AARRGGBB color.\& Default: use the default \fIforeground\fR
color.\&
.P
.RE
\fBbutton-width\fR
.RS 4
Width, in pixels (subject to output scaling), of the
minimize/maximize/close buttons.\& Default: \fI26\fR.\&
.P
.RE
\fBbutton-color\fR
.RS 4
Foreground color on the minimize/maximize/close buttons.\& Default:
use the default \fIbackground\fR color.\&
.P
.RE
\fBbutton-minimize-color\fR
.RS 4
Minimize button's background color, on the format
AARRGGBB.\& Default: use the default \fIregular4\fR color (blue).\&
.P
.RE
\fBbutton-maximize-color\fR
.RS 4
Maximize button's background color, on the format
AARRGGBB.\& Default: use the default \fIregular2\fR color (green).\&
.P
.RE
\fBbutton-close-color\fR
.RS 4
Close button's background color, on the format AARRGGBB.\& Default:
use the default \fIregular1\fR color (red).\&
.P
.P
.RE
.SH SECTION: key-bindings
.P
This section lets you override the default key bindings.\&
.P
The general format is \fIaction=combo1.\&.\&.\&comboN\fR.\& That is, each action
may have one or more key combinations, space separated.\& Each
combination is on the form \fImod1+mod2+key\fR.\& The names of the modifiers
and the key \fBmust\fR be valid XKB key names.\&
.P
Note that if \fBShift\fR is one of the modifiers, the \fIkey\fR \fBmust not\fR be
in upper case.\& For example, \fBControl+Shift+V\fR will never trigger, but
\fBControl+Shift+v\fR will.\&
.P
Note that \fBAlt\fR is usually called \fBMod1\fR.\&
.P
A key combination can only be mapped to \fBone\fR action.\& Lets say you
want to bind \fBControl+Shift+R\fR to \fBfullscreen\fR.\& Since this is the
default shortcut for \fBsearch-start\fR, you first need to unmap the
default binding.\& This can be done by setting \fIaction=none\fR;
e.\&g.\& \fBsearch-start=none\fR.\&
.P
\fBscrollback-up-page\fR
.RS 4
Scrolls up/back one page in history.\& Default: \fIShift+Page_Up\fR.\&
.P
.RE
\fBscrollback-up-half-page\fR
.RS 4
Scrolls up/back half of a page in history.\& Default: \fInot set\fR.\&
.P
.RE
\fBscrollback-up-line\fR
.RS 4
Scrolls up/back a single line in history.\& Default: \fInot set\fR.\&
.P
.RE
\fBscrollback-down-page\fR
.RS 4
Scroll down/forward one page in history.\& Default:
\fIShift+Page_Down\fR.\&
.P
.RE
\fBscrollback-down-half-page\fR
.RS 4
Scroll down/forward half of a page in history.\& Default: \fInot set\fR.\&
.P
.RE
\fBscrollback-down-line\fR
.RS 4
Scroll down/forward a single line in history.\& Default: \fInot set\fR.\&
.P
.RE
\fBclipboard-copy\fR
.RS 4
Copies the current selection into the \fIclipboard\fR.\& Default: \fIControl+Shift+c\fR.\&
.P
.RE
\fBclipboard-paste\fR
.RS 4
Pastes from the \fIclipboard\fR.\& Default: \fIControl+Shift+v\fR.\&
.P
.RE
\fBprimary-paste\fR
.RS 4
Pastes from the \fIprimary selection\fR.\& Default: \fIShift+Insert\fR (also
defined in \fBmouse-bindings\fR).\&
.P
.RE
\fBsearch-start\fR
.RS 4
Starts a scrollback/history search.\& Default: \fIControl+Shift+r\fR.\&
.P
.RE
\fBfont-increase\fR
.RS 4
Increases the font size by 0.\&5pt.\& Default: \fIControl+plus
Control+equal Control+KP_Add\fR.\&
.P
.RE
\fBfont-decrease\fR
.RS 4
Decreases the font size by 0.\&5pt.\& Default: \fIControl+minus
Control+KP_Subtract\fR.\&
.P
.RE
\fBfont-reset\fR
.RS 4
Resets the font size to the default.\& Default: \fIControl+0 Control+KP_0\fR.\&
.P
.RE
\fBspawn-terminal\fR
.RS 4
Spawns a new terminal.\& If the shell has been configured to emit
the OSC 7 escape sequence, the new terminal will start in the
current working directory.\& Default: \fIControl+Shift+n\fR.\&
.P
.RE
\fBminimize\fR
.RS 4
Minimizes the window.\& Default: \fInot bound\fR.\&
.P
.RE
\fBmaximize\fR
.RS 4
Toggle the maximized state.\& Default: \fInot bound\fR.\&
.P
.RE
\fBfullscreen\fR
.RS 4
Toggles the fullscreen state.\& Default: \fInot bound\fR.\&
.P
.RE
\fBpipe-visible\fR, \fBpipe-scrollback\fR, \fBpipe-selected\fR
.RS 4
Pipes the currently visible text, the entire scrollback, or the
currently selected text to an external tool.\& The syntax for this
option is a bit special; the first part of the value is the
command to execute enclosed in "[]", followed by the binding(s).\&
.P
You can configure multiple pipes as long as the command strings
are different and the key bindings are unique.\&
.P
Note that the command is \fBnot\fR automatically run inside a shell;
use \fBsh -c "command line"\fR if you need that.\&
.P
Example:
.RS 4
\fBpipe-visible=[sh -c "xurls | uniq | tac | fuzzel | xargs -r
firefox"] Control+Print\fR
.P
.RE
Default: \fInot bound\fR
.P
.RE
\fBshow-urls-launch\fR
.RS 4
Enter URL mode, where all currently visible URLs are tagged with a
jump label with a key sequence that will open the URL.\& Default:
\fIControl+Shift+u\fR.\&
.P
.RE
\fBshow-urls-copy\fR
.RS 4
Enter URL mode, where all currently visible URLs are tagged with a
jump label with a key sequence that will place the URL in the
clipboard.\& Default: \fInone\fR.\&
.P
.P
.RE
.SH SECTION: search-bindings
.P
This section lets you override the default key bindings used in
scrollback search mode.\& The syntax is exactly the same as the regular
\fB\fRkey-bindings\fB\fR.\&
.P
\fBcancel\fR
.RS 4
Aborts the search.\& The viewport is restored and the \fIprimary
selection\fR is \fB\fRnot\fB\fR updated.\& Default: \fIControl+g Control+c
Escape\fR.\&
.P
.RE
\fBcommit\fR
.RS 4
Exit search mode and copy current selection into the \fIprimary
selection\fR.\& Viewport is \fB\fRnot\fB\fR restored.\& To copy the selection to
the regular \fIclipboard\fR, use \fBControl+Shift+c\fR.\& Default: \fIReturn\fR.\&
.P
.RE
\fBfind-prev\fR
.RS 4
Search \fB\fRbackwards\fB\fR in the scrollback history for the next
match.\& Default: \fIControl+r\fR.\&
.P
.RE
\fBfind-next\fR
.RS 4
Searches \fB\fRforwards\fB\fR in the scrollback history for the next
match.\& Default: \fIControl+s\fR.\&
.P
.RE
\fBcursor-left\fR
.RS 4
Moves the cursor in the search box one \fB\fRcharacter\fB\fR to the
left.\& Default: \fILeft Control+b\fR.\&
.P
.RE
\fBcursor-left-word\fR
.RS 4
Moves the cursor in the search box one \fB\fRword\fB\fR to the
left.\& Default: \fIControl+Left Mod1+b\fR.\&
.P
.RE
\fBcursor-right\fR
.RS 4
Moves the cursor in the search box one \fB\fRcharacter\fB\fR to the
right.\& Default: \fIRight Control+f\fR.\&
.P
.RE
\fBcursor-right-word\fR
.RS 4
Moves the cursor in the search box one \fB\fRword\fB\fR to the
right.\& Default: \fIControl+Right Mod1+f\fR.\&
.P
.RE
\fBcursor-home\fR
.RS 4
Moves the cursor in the search box to the beginning of the
input.\& Default: \fIHome Control+a\fR.\&
.P
.RE
\fBcursor-end\fR
.RS 4
Moves the cursor in the search box to the end of the
input.\& Default: \fIEnd Control+e\fR.\&
.P
.RE
\fBdelete-prev\fR
.RS 4
Deletes the \fB\fRcharacter before\fB\fR the cursor.\& Default: \fIBackSpace\fR.\&
.P
.RE
\fBdelete-prev-word\fR
.RS 4
Deletes the \fB\fRword before\fB\fR the cursor.\& Default: \fIMod1+BackSpace
Control+BackSpace\fR.\&
.P
.RE
\fBdelete-next\fR
.RS 4
Deletes the \fB\fRcharacter after\fB\fR the cursor.\& Default: \fIDelete\fR.\&
.P
.RE
\fBdelete-next-word\fR
.RS 4
Deletes the \fB\fRword after\fB\fR the cursor.\& Default: \fIMod1+d
Control+Delete\fR.\&
.P
.RE
\fBextend-to-word-boundary\fR
.RS 4
Extend current selection to the next word boundary.\& Default:
\fIControl+w\fR.\&
.P
.RE
\fBextend-to-next-whitespace\fR
.RS 4
Extend the current selection to the next whitespace.\& Default:
\fIControl+Shift+w\fR.\&
.P
.RE
\fBclipboard-paste\fR
.RS 4
Paste from the \fIclipboard\fR into the search buffer.\& Default:
\fIControl+v Control+y\fR.\&
.P
.RE
\fBprimary-paste\fR
.RS 4
Paste from the \fIprimary selection\fR into the search
buffer.\& Default: \fIShift+Insert\fR.\&
.P
.P
.RE
.SH SECTION: url-bindings
.P
This section lets you override the default key bindings used in URL
mode.\& The syntax is exactly the same as the regular \fB\fRkey-bindings\fB\fR.\&
.P
\fBcancel\fR
.RS 4
Exits URL mode without opening an URL.\& Default: \fIControl+g
Control+c Control+d Escape\fR.\&
.P
.RE
\fBtoggle-url-visible\fR
.RS 4
By default, the jump label only shows the key sequence required to
activate it.\& This is fine as long as the URL is visible in the
original text.\&
.P
But with e.\&g.\& OSC-8 URLs (the terminal version of HTML anchors,
i.\&e.\& "links"), the text on the screen can be something completey
different than the URL.\&
.P
This action toggles between showing and hiding the URL on the jump
label.\&
.P
Default: \fIt\fR.\&
.P
.P
.RE
.SH SECTION: mouse-bindings
.P
This section lets you override the default mouse bindings.\&
.P
The general format is \fIaction=combo1.\&.\&.\&comboN\fR.\& That is, each action
may have one or more key combinations, space separated.\& Each
combination is on the form \fImod1+mod2+BTN_<name>[-COUNT]\fR.\& The names
of the modifiers \fBmust\fR be valid XKB key names, and the button name
\fBmust\fR be a valid libinput name.\& You can find the button names using
\fBlibinput debug-events\fR.\&
.P
Note that \fBShift\fR cannot be used as a modifier in mouse bindings since
it is used to enable selection when the client application is grabbing
the mouse.\&
.P
The trailing \fBCOUNT\fR is optional and specifies the click count
required to trigger the binding.\& The default if \fBCOUNT\fR is omitted is
\fI1\fR.\&
.P
A modifier+button combination can only be mapped to \fBone\fR action.\& Lets
say you want to bind \fBBTN_MIDDLE\fR to \fBfullscreen\fR.\& Since
\fBBTN_MIDDLE\fR is the default binding for \fBprimary-paste\fR, you first
need to unmap the default binding.\& This can be done by setting
\fIaction=none\fR; e.\&g.\& \fBprimary-paste=none\fR.\&
.P
All actions listed under \fBkey-bindings\fR can be user here as well.\&
.P
\fBselect-begin\fR
.RS 4
Begin an interactive selection.\& The selection is finalized, and
copied to the \fIprimary selection\fR, when the button is
released.\& Default: \fIBTN_LEFT\fR.\&
.P
.RE
\fBselect-begin-block\fR
.RS 4
Begin an interactive block selection.\& The selection is finalized,
and copied to the \fIprimary selection\fR, when the button is
released.\& Default: \fIControl+BTN_LEFT\fR.\&
.P
.RE
\fBselect-word\fR
.RS 4
Begin an interactive word-wise selection, where words are
separated by whitespace and all characters defined by the
\fBword-delimiters\fR option.\& The selection is finalized, and copied
to the \fIprimary selection\fR, when the button is released.\& Default:
\fIBTN_LEFT-2\fR.\&
.P
.RE
\fBselect-word-whitespace\fR
.RS 4
Same as \fBselect-word\fR, but the characters in the \fBword-delimiters\fR
option are ignored.\& I.\&e only whitespace characters act as
delimiters.\& The selection is finalized, and copied to the \fIprimary
selection\fR, when the button is released.\& Default:
\fIControl+_BTN_LEFT-2\fR.\&
.P
.RE
\fBselect-row\fR
.RS 4
Begin an interactive row-wise selection.\& The selection is
finalized, and copied to the \fIprimary selection\fR, when the button
is released.\& Default: \fIBTN_LEFT-3\fR.\&
.P
.RE
\fBselect-extend\fR
.RS 4
Interactively extend an existing selection, using the original
selection mode (normal, block, word-wise or row-wise).\& The
selection is finalized, and copied to the \fIprimary selection\fR,
when the button is released.\& Default: \fIBTN_RIGHT\fR.\&
.P
.RE
\fBselect-extend-character-wise\fR
.RS 4
Same as \fBselect-extend\fR, but forces the selection mode to \fInormal\fR
(i.\&e.\& character wise).\& Note that this causes subsequent
\fBselect-extend\fR operations to be character wise.\& This action is
ignored for block selections.\& Default: \fIControl+BTN_RIGHT\fR.\&
.P
.P
.RE
\fBprimary-paste\fR
.RS 4
Pastes from the \fIprimary selection\fR.\& Default: \fIBTN_MIDDLE\fR.\&
.P
.P
.RE
.SH TWEAK
.P
This section is for advanced users and describes configuration options
that can be used to tweak foot's low-level behavior.\&
.P
These options are \fBnot\fR included in the example configuration.\& You
should not change these unless you understand what they do and note
that changing the default values \fBwill\fR print a warning when launching
foot.\&
.P
Note that these options may change, or be removed at any time, without
prior notice.\&
.P
When reporting bugs, please mention if, and to what, you have changed
any of these options.\&
.P
\fBscaling-filter\fR
.RS 4
Overrides the default scaling filter used when down-scaling bitmap
fonts (e.\&g.\& emoji fonts).\& Possible values are \fBnone\fR, \fBnearest\fR,
\fBbilinear\fR, \fBcubic\fR or \fBlanczos3\fR.\& \fBcubic\fR and \fBlanczos3\fR produce
the best results, but are slower (with \fBlanczos3\fR being the best
\fIand\fR slowest).\&
.P
Default: \fIlanczos3\fR.\&
.P
.RE
\fBoverflowing-glyphs\fR
.RS 4
Boolean.\& When enabled, glyphs wider than their cell(s) are allowed
to render into one additional neighbouring cell.\&
.P
One use case for this are fonts with wide italic characters that
"bend" into the next cell.\& Without this option, such glyphs will
appear "cut off".\&
.P
Another use case are fonts with "icon" characters in the Unicode
private usage area, e.\&g.\& Nerd Fonts, or Powerline Fonts and legacy
emoji characters like \fBWHITE FROWNING FACE\fR.\&
.P
Note: might impact performance depending on the font used.\&
Especially small font sizes can cause many overflowing glyphs
because of subpixel rendering.\&
.P
Default: \fIyes\fR.\&
.P
.RE
\fBrender-timer\fR
.RS 4
Enables a frame rendering timer, that prints the time it takes to
render each frame, in microseconds, either on-screen, to stderr,
or both.\& Valid values are \fBnone\fR, \fBosd\fR, \fBlog\fR and
\fBboth\fR.\& Default: \fInone\fR.\&
.P
.RE
\fBbox-drawing-base-thickness\fR
.RS 4
Line thickness to use for \fBLIGHT\fR box drawing line characters, in
points.\& This value is converted to pixels using the monitor's DPI,
and then multiplied with the cell size.\& The end result is that a
larger font (and thus larger cells) result in thicker
lines.\& Default: \fI0.\&04\fR.\&
.P
.RE
\fBbox-drawing-solid-shades\fR
.RS 4
Boolean.\& When enabled, box drawing "shades" (e.\&g.\& LIGHT SHADE,
MEDIUM SHADE and DARK SHADE) are rendered as solid blocks using a
darker variant of the current foreground color.\&
.P
When disabled, they are instead rendered as checker box pattern,
using the current foreground color as is.\&
.P
Default: \fIyes\fR.\&
.P
.RE
\fBdelayed-render-lower\fR, \fBdelayed-render-upper\fR
.RS 4
These two values control the timeouts (in nanoseconds) that are
used to mitigate screen flicker caused by clients writing large,
non-atomic screen updates.\&
.P
If a client splits up a screen update over multiple \fBwrite\fR(3)
calls, we may end up rendering an intermediate frame, quickly
followed by another frame with the final screen content.\& For
example, the client may erase part of the screen (or scroll) in
one write, and then write new content in one or more subsequent
writes.\& Rendering the frame when the screen has been erased, but
not yet filled with new content will be perceived as screen
flicker.\&
.P
The \fBreal\fR solution to this is \fIApplication Synchronized Updates\fR
(https://gitlab.\&freedesktop.\&org/terminal-wg/specifications/-/merge_requests/2).\&
.P
The problem with this is twofold - first, it has not yet been
standardized, and thus there are not many terminal emulators that
implement it (foot \fBdoes\fR implement it), and second, applications
must be patched to use it.\&
.P
Until this has happened, foot offers an interim workaround; an
attempt to mitigate the screen flicker \fBwithout\fR affecting neither
performance nor latency.\&
.P
It is based on the fact that the screen is updated at a fixed
interval (typically 60Hz).\& For us, this means it does not matter
if we render a new frame at the \fBbeginning\fR of a frame interval,
or at the \fBend\fR.\& Thus, the goal is to introduce a delay between
receiving client data and rendering the resulting state, but
without causing a frame skip.\&
.P
While it should be possible to estimate the amount of time left
until the next frame, foot's algorithm is currently not that
advanced, but is based on statistics I guess you could say - the
delay we introduce is so small that the risk of pushing the frame
over to the next frame interval is also very small.\&
.P
Now, that was a lot of text.\& But what is it foot actually does?\&
.P
When receiving client data, it schedules a timer, the
\fBdelayed-render-lower\fR.\& If we do not receive any more client data
before the timer has run out, we render the frame.\& If however, we
do receive more data, the timer is re-scheduled.\& That is, each
time we receive client data, frame rendering is delayed another
\fBdelayed-render-lower\fR nanoseconds.\&
.P
Now, while this works very well with most clients, it would be
possible to construct a malicious client that keeps writing data
at a slow pace.\& To the user, this would look like foot has frozen
as we never get to render a new frame.\& To prevent this, an upper
limit is set - \fBdelayed-render-upper\fR.\& If this timer runs out, we
render the frame regardless of what the client is doing.\&
.P
If changing these values, note that the lower timeout \fBmust\fR be
set lower than the upper timeout, but that this is not verified by
foot.\& Furthermore, both values must be less than 16ms (that is,
16000000 nanoseconds).\&
.P
You can disable the feature altogether by setting either value to
0.\& In this case, frames are rendered "as soon as possible".\&
.P
Default: lower=\fI500000\fR (0.\&5ms), upper=\fI8333333\fR (8.\&3ms - half a
frame interval).\&
.P
.RE
\fBdamage-whole-window\fR
.RS 4
Boolean.\& When enabled, foot will 'damage' the entire window each
time a frame has been rendered.\& This forces the compositor to
redraw the entire window.\& If disabled, foot will only 'damage'
updated rows.\&
.P
There is normally \fBno\fR reason to enable this.\& However, it has been
seen to workaround an issue with \fIfractional scaling\fR in \fIGnome\fR.\&
.P
Note that enabling this option is likely to increase CPU and/or
GPU usage (by the compositor, not by foot), and may have a
negative impact on battery life.\&
.P
Default: \fIno\fR.\&
.P
.RE
\fBgrapheme-shaping\fR
.RS 4
Boolean.\& When enabled, foot will use \fIutf8proc\fR to do grapheme
cluster segmentation while parsing "printed" text.\& Then, when
rendering, it will use \fIfcft\fR (if compiled with \fIHarfBuzz\fR
support) to shape the grapheme clusters.\&
.P
This is required to render e.\&g.\& flag (emoji) sequences, keycap
sequences, modifier sequences, zero-width-joiner (ZWJ) sequences
andn emoji tag sequences.\& It might also improve rendering of
composed characters, depending on font.\&
.P
This is an experimental feature with the following requirements
and limitations:
.P
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.IP \(bu 4
.\}
foot must have been compiled with utf8proc support
.RE
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.IP \(bu 4
.\}
fcft must have been compiled with HarfBuzz support
.RE
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.IP \(bu 4
.\}
This option must be set to true
.RE
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.IP \(bu 4
.\}
Foot will use \fBwcswidth\fR(3) to calculate a cluster's display
width.\& This will typically \fInot\fR match the shaped glyph's width,
but is necessary to not break cursor synchronization with the
application running in foot.\&

.RE
.P
See also: \fBgrapheme-width-method\fR.\&
.P
Default: \fIno\fR
.P
.RE
\fBgrapheme-width-method\fR
.RS 4
Selects which method to use when calculating the width
(i.\&e.\& number of columns) of a grapheme cluster.\& One of
\fBdouble-width\fR and \fBwcswidth\fR.\&
.P
\fBwcswidth\fR simply adds together the individual width of all
codepoints making up the cluster.\&
.P
\fBdouble-width\fR does the same, but limits the maximum number of
columns to 2.\& This is more correct, but is likely to break
applications since applications typically use \fBwcswidth\fR(3)
internally to calculate the width.\& This results in cursor
de-synchronization issues.\&
.P
Default: \fIdouble-width\fR
.P
.RE
\fBmax-shm-pool-size-mb\fR
.RS 4
This option controls the amount of virtual address space used by
the pixmap memory to which the terminal screen content is
rendered.\&
.P
It does not change how much physical memory foot uses.\&
.P
Foot uses a memory mapping trick to implement fast rendering of
interactive scrolling (typically, but applies to "slow" scrolling
in general).\& Example: holding down the 'up' or 'down' arrow key to
scroll in a text editor.\&
.P
For this to work, it needs a large amount of virtual address
space.\& Again, note that this is not physical memory.\&
.P
On a normal x64 based computer, each process has 128TB of virtual
address space, and newer ones have 64PB.\& This is an insane amount
and most applications do not use anywhere near that amount.\&
.P
Each foot terminal window can allocate up to 2GB of virtual
address space.\& With 128TB of address space, that means a maximum
of 65536 windows in server/daemon mode (for 2GB).\& That should be
enough, yes?\&
.P
However, the Wayland compositor also needs to allocate the same
amount of virtual address space.\& Thus, it has a slightly higher
chance of running out of address space since it needs to host
all running Wayland clients in the same way, at the same time.\&
.P
In the off chance that this becomes a problem for you, you can
reduce the amount used with this option.\&
.P
Or, for optimal performance, you can increase it to the maximum
allowed value, 2GB (but note that you most likely will not notice
any difference compared to the default value).\&
.P
Setting it to 0 disables the feature.\&
.P
Limitations:
.RS 4
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.IP \(bu 4
.\}
only supported on 64-bit architectures
.RE
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.IP \(bu 4
.\}
only supported on Linux

.RE
.P
.RE
Default: \fI512\fR.\& Maximum allowed: \fI2048\fR (2GB).\&
.P
.RE
.SH SEE ALSO
.P
\fBfoot\fR(1), \fBfootclient\fR(1)
